on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            .: 'src/*'
            ./test_framework: test_framework/*
            ./youki_integration_test: youki_integration_test/*
            ./cgroups: cgroups/*
  check:
    needs: [changes]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
        dirs: ${{ fromJSON(needs.changes.outputs.dirs) }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - run: rustup component add rustfmt clippy
      - run: sudo apt-get -y update
      - run: sudo apt-get install -y pkg-config libsystemd-dev libdbus-glib-1-dev libelf-dev
      - name: Check formatting
        run: cargo fmt --all -- --check
        working-directory: ${{matrix.dirs}}
      - name: Check clippy lints
        working-directory: ${{matrix.dirs}}
        run: cargo clippy --all-targets --all-features -- -D warnings
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [1.54.0]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - run: sudo apt-get -y update
      - run: sudo apt-get install -y pkg-config libsystemd-dev libdbus-glib-1-dev libelf-dev
      - name: Build
        run: ./build.sh --release
      - name: Run tests
        run: cargo test --no-fail-fast
      - name: Run doc tests
        run: cargo test --doc
      - name: Run cgroup tests
        working-directory: cgroups
        run: cargo test --no-fail-fast
  coverage:
    runs-on: ubuntu-latest
    name: Run test coverage
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        continue-on-error: true
      - name: install cargo-llvm-cov
        run: |
          wget https://github.com/taiki-e/cargo-llvm-cov/releases/download/v${CARGO_LLVM_COV_VERSION}/cargo-llvm-cov-x86_64-unknown-linux-gnu.tar.gz -qO- | tar -xzvf -
          mv cargo-llvm-cov ~/.cargo/bin
        env:
          CARGO_LLVM_COV_VERSION: 0.1.5
      - name: Update System Libraries
        run: sudo apt-get -y update
      - name: Install System Libraries
        run: sudo apt-get install -y pkg-config libsystemd-dev libdbus-glib-1-dev libelf-dev
      - name: Toolchain setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
          components: llvm-tools-preview
      - name: Run Test Coverage for youki
        run: |
          cargo llvm-cov clean --workspace
          cargo llvm-cov --no-report
          cargo llvm-cov --no-run --lcov --output-path ./coverage.lcov
      - name: Run Test Coverage for cgroups
        working-directory: ./cgroups
        run: |
          cargo llvm-cov clean --workspace
          cargo llvm-cov --no-report
          cargo llvm-cov --no-run --lcov --output-path ./coverage.lcov
      - name: Upload Youki Code Coverage Results
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.lcov
      - name: Upload Cgroups Code Coverage Results
        uses: codecov/codecov-action@v2
        with:
          file: ./cgroups/coverage.lcov
  integration_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [1.54.0]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            integration_test/src/github.com/opencontainers/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
      - run: sudo apt-get -y update
      - run: sudo apt-get install -y pkg-config libsystemd-dev libdbus-glib-1-dev libelf-dev
      - name: Build
        run: ./build.sh --release
      - uses: actions/setup-go@v2
        with:
          go-version: "1.11.0"
      - name: Run intetgration tests
        run: ./integration_test.sh
